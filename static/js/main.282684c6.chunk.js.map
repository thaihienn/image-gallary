{"version":3,"sources":["comps/Title.js","firebase/config.js","hook/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hook/useFireStore.js","comps/ImageGrid.js","comps/Model.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","dosc","setDosc","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Model","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.282684c6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <div className=\"nav\">\n        <h1>Saved Pictures</h1>\n      </div>\n      <h2>Your Pictures</h2>\n      <p>All Your Images Here. Let Enjoy Thats</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import * as firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC9ujmo_80PdU2WucroIb6XOTYBAuq80yk\",\r\n  authDomain: \"hiendt-savepic.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://hiendt-savepic-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"hiendt-savepic\",\r\n  storageBucket: \"hiendt-savepic.appspot.com\",\r\n  messagingSenderId: \"1053858785727\",\r\n  appId: \"1:1053858785727:web:2ffdc52c4497413efb990a\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        await collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hook/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = useStorage(file);\r\n  console.log(progress, url);\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png or jpg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [dosc, setDosc] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDosc(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection]);\r\n\r\n  return { dosc };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hook/useFireStore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { dosc } = useFirestore(\"images\");\r\n  console.log(dosc);\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {dosc &&\r\n        dosc.map((doc) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Model = ({ setSelectedImg, selectedImg }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Model from \"./comps/Model\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Model selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}